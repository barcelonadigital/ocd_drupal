<?php

include_once 'ohp_case.utils.inc';

/**
 * @file
 * Module file for ohp_case_module.
 */

/**
 * @defgroup ohp_case Example: Page
 * @ingroup examples
 * @{
 * This example demonstrates how a module can display a page at a given URL.
 *
 * It's important to understand how the menu system works in order to
 * implement your own pages. See the Menu Example module for some insight.
 *
 * @see menu_example
 */

/**
 * Implements hook_help().
 *
 * Through hook_help(), a module can make documentation available to the user
 * for the module as a whole or for specific paths. Where the help appears
 * depends on the $path specified.
 *
 * In the first example below, the help text will appear on the simple page
 * defined in hook_menu below in the region designated for help text.
 *
 * In the second example, the text will be available through the module page as
 * a link beside the module or on the admin help page (admin/help) in the list
 * of help topics using the name of the module. To specify help in the admin
 * section use the module name in the path as in the second case below.
 *
 * @see hook_help()
 */
function ohp_case_help($path, $arg) {
  switch ($path) {
    case 'ohp/ohp_case/simple':
      // Help text for the simple page registered for this path.
      return t('This is help text for the simple page.');
  }
}

/**
 * Implements hook_permission().
 *
 * Since the access to our new custom pages will be granted based on
 * special permissions, we need to define what those permissions are here.
 * This ensures that they are available to enable on the user role
 * administration pages.
 */
function ohp_case_permission() {
  return array(
    'access ohp_case_search content' => array(
      'title' => t('Acces ohp_case_search'),
      'description' => t('Allow users to access ohp_case_search page'),
    ),
  );
}

/**
 * Implements hook_menu().
 *
 * Because hook_menu() registers URL paths for items defined by the function, it
 * is necessary for modules that create pages. Each item can also specify a
 * callback function for a given URL. The menu items returned here provide this
 * information to the menu system.
 *
 * We will define some menus, and their paths will be interpreted as follows:
 *
 * If the user accesses http://example.com/?q=ohp/ohp_case/simple,
 * the menu system will first look for a menu item with that path. In this case
 * it will find a match, and execute ohp_case_simple().
 *
 * If the user accesses http://example.com/?q=ohp/ohp_case/arguments,
 * the menu system will find no explicit match, and will fall back to the
 * closest match, 'ohp/ohp_case', executing ohp_case_description().
 *
 * If the user accesses
 * http://example.com/?q=ohp/ohp_case/arguments/1/2, the menu
 * system will first look for ohp/ohp_case/arguments/1/2. Not finding
 * a match, it will look for ohp/ohp_case/arguments/1/%. Again not
 * finding a match, it will look for ohp/ohp_case/arguments/%/2.
 * Yet again not finding a match, it will look for
 * ohp/ohp_case/arguments/%/%. This time it finds a match, and so will
 * execute ohp_case_arguments(1, 2). Since the parameters are passed to
 * the function after the match, the function can do additional checking or
 * make use of them before executing the callback function.
 *
 * @see hook_menu()
 * @see menu_example
 */
function ohp_case_menu() {

  // This is the minimum information you can provide for a menu item. This menu
  // item will be created in the default menu, usually Navigation.
  $items['ohp/ohp_case'] = array(
    'title' => 'Cercar pacient',
    'page callback'    => 'ohp_case_search_page',
    //'page callback' => 'drupal_get_form',
    //'page arguments'   => array('ohp_case_search_form'),
    'access arguments' => array('access ohp_case_search content'),
    'file' => 'ohp_case_search.inc',
  );
  $items['ohp/ohp_case_result'] = array(
    'title' => 'Resultats de la cerca',
    'page callback' => 'ohp_case_result_page',
    'access arguments' => array('access ohp_case_search content'),
    'type' => MENU_CALLBACK,
    'file' => 'ohp_case_result.inc',
  );
  $items['ohp/ohp_case_main'] = array(
    'title' => 'Fitxa del pacient',
    'page callback' => 'ohp_case_task_page',
    'access arguments' => array('access ohp_case_search content'),
    'type' => MENU_CALLBACK,
    'file' => 'ohp_case_task.inc',
  );
  $items['ohp/ohp_case_taskunit'] = array(
    'title' => 'Fitxa del pacient',
    'page callback' => 'ohp_case_taskunit_page',
    'access arguments' => array('access ohp_case_search content'),
    'type' => MENU_CALLBACK,
    'file' => 'ohp_case_taskunit.inc',
  );
  $items['ohp/ohp_case_formcatsalut'] = array(
    'title' => 'Sol·licitud d\'OCD a CatSalut',
    'page callback' => 'ohp_case_formcatsalut_page',
    'access arguments' => array('access ohp_case_search content'),
    'type' => MENU_CALLBACK,
    'file' => 'ohp_case_formcatsalut.inc',
  );
  $items['ohp/ohp_case_formdocument'] = array(
    'title' => 'Enviament de document a la història clínica',
    'page callback' => 'ohp_case_formdocument_page',
    'access arguments' => array('access ohp_case_search content'),
    'type' => MENU_CALLBACK,
    'file' => 'ohp_case_formdocument.inc',
  );
  $items['ohp/ohp_case_form'] = array(
    'title' => 'Fitxa del pacient',
    'page callback' => 'ohp_case_form_page',
    //'page callback' => 'drupal_get_form',
    //'page arguments' => array('ohp_case_form_page'),
    'access arguments' => array('access ohp_case_search content'),
    'type' => MENU_CALLBACK,
    'file' => 'ohp_case_form.inc',
  );
  $items['ohp/ohp_case_formunit'] = array(
    'title' => 'Fitxa del pacient',
    'page callback' => 'ohp_case_formunit_page',
    'access arguments' => array('access ohp_case_search content'),
    'type' => MENU_CALLBACK,
    'file' => 'ohp_case_formunit.inc',
  );
  $items['ohp/ohp_case_taskfinish'] = array(
    'title' => 'Tancar tasca',
    'page callback' => 'ohp_case_task_finish',
    'access arguments' => array('access ohp_case_search content'),
    'file' => 'ohp_case_taskstatus.inc',
  );
  $items['ohp/ohp_case_taskopen'] = array(
    'title' => 'Reobrir tasca',
    'page callback' => 'ohp_case_task_reopen',
    'access arguments' => array('access ohp_case_search content'),
    'file' => 'ohp_case_taskstatus.inc',
  );
  $items['ohp/ohp_case_taskdelete'] = array(
    'title' => 'Eliminar tasca',
    'page callback' => 'ohp_case_task_delete',
    'access arguments' => array('access ohp_case_search content'),
    'file' => 'ohp_case_taskstatus.inc',
  );
  $items['ohp/ohp_case_unselect'] = array(
    'title' => 'Seleccionar un altre pacient',
    'page callback' => 'ohp_case_unselect_page',
    'access arguments' => array('access ohp_case_search content'),
    'type' => MENU_CALLBACK,
  );
  
  return $items;
}

function ohp_case_unselect_page() {
  $_SESSION['case_bean'] = NULL;
  $_SESSION['admission_bean'] = NULL;
  drupal_goto('ohp/ohp_case');
}

/**
 * Implements hook_theme().
 *
 * Defines the theming capabilities provided by this module.
 */
function ohp_case_theme() {
  return array(
    'ohp_case_header'  => array(
      'render element' => 'elements',
      'template' => 'tpl/ohp-case-header-layout',
    ),
    'ohp_case_header_form'  => array(
      'render element' => 'elements',
      'template' => 'tpl/ohp-case-header-form-layout',
    ),
    'ohp_case_search'  => array(
      'render element' => 'elements',
      'template' => 'tpl/ohp-case-search-form',
      'file' => 'ohp_case_search.inc',
    ),
    'ohp_case_result'  => array(
      'render element' => 'elements',
      'template' => 'tpl/ohp-case-result-form',
      'file' => 'ohp_case_result.inc',
    ),
    'ohp_case_body'  => array(
      'render element' => 'elements',
      'template' => 'tpl/ohp-case-body-layout',
    ),
    'ohp_case_menu'  => array(
      'render element' => 'elements',
      'template' => 'tpl/ohp-case-menu-layout',
    ),
    'ohp_case_newtask'  => array(
      'render element' => 'elements',
      'template' => 'tpl/ohp-case-newtask-modal',
    ),
    'ohp_case_formhints'  => array(
      'render element' => 'elements',
      'template' => 'tpl/ohp-case-formhints-modal',
    ),
    'ohp_case_formctrl'  => array(
      'template' => 'tpl/ohp-case-formctrl-layout',
      'variables' => array(
        'selected_option' => NULL,
        'task_status' => NULL,
      ),
    ),
    'ohp_case_confirm'  => array(
      'render element' => 'elements',
      'template' => 'tpl/ohp-case-confirm-modal',
    ),
  );
}

/**
 * Process variables for theming-example-text-form.tpl.php
 *
 * @see theming-example-text-form.tpl.php
 */
function template_preprocess_ohp_case_menu(&$variables) {
  if(isset($variables['elements']['is_active_menu_formularis'])){
    $variables['is_active_menu_formularis'] = $variables['elements']['is_active_menu_formularis'];
  }
  if(isset($variables['elements']['is_active_menu_info_pacient'])){
    $variables['is_active_menu_info_pacient'] = $variables['elements']['is_active_menu_info_pacient'];
  }
}

/**
 * Process variables for ohp-case-search-form.tpl.php
 *
 * @see ohp-case-search-form.tpl.php
 */
function template_preprocess_ohp_case_body(&$variables) {
  $variables['body_style'] = '';
  $variables['body_content'] = drupal_render($variables['elements']['pager_container']);
  $variables['menu_content'] = drupal_render($variables['elements']['menu_container']);
}

/**
 * Process variables for theming-example-text-form.tpl.php
 *
 * @see theming-example-text-form.tpl.php
 */
function template_preprocess_ohp_case_header_form(&$variables) {
  template_preprocess_ohp_case_header($variables);
}

/**
 * Process variables for theming-example-text-form.tpl.php
 *
 * @see theming-example-text-form.tpl.php
 */
function template_preprocess_ohp_case_header(&$variables) {

  $case_bean_stored  = NULL;
  if(isset($_SESSION['case_bean'])){
    $case_bean_stored  = $_SESSION['case_bean'];
  }

  if($case_bean_stored !=NULL){

    $variables['fullname'] = $case_bean_stored->fullname;

    $variables['ident_patient'] = '<span><strong>'.t('Edat').':</strong> '.$case_bean_stored->age.'</span>';
    $variables['ident_patient'] .=  '<span><strong>'.t('Gènere').':</strong> '.$case_bean_stored->desc_sex.'</span>';
    $variables['ident_patient'] .=  '<span><strong>'.t('CIP').':</strong> '.$case_bean_stored->cip.'</span>';

    if(isset($case_bean_stored->contact)){
      $dropdown_list = "<ul>";
      if(isset($case_bean_stored->contact->addresses) && !empty($case_bean_stored->contact->addresses)){
        $i = 1;
        foreach ($case_bean_stored->contact->addresses as $address) {
          $dropdown_list .= '<li><b>'.t('Adreça').' '.$i.':</b></li>';
          $street   = (string)$address->street;
          $number   = (string)$address->number;
          $floor    = (string)$address->floor;
          $suite    = (string)$address->suite;
          $postcode = (string)$address->postcode;
          $city     = (string)$address->city;
          $country  = (string)$address->country;
          $dropdown_list .= '<li>'.$street.' '.$number.' '.t('Pis').' '.$floor.' '.$suite.'</li>';
          $dropdown_list .= '<li>'.$postcode.' '.$city.'</li>';
          $dropdown_list .= '<li>'.$country.'<br></li>';
          $i++;
        }
      }
      if(isset($case_bean_stored->contact->phones) && !empty($case_bean_stored->contact->phones)){
        foreach ($case_bean_stored->contact->phones as $phone) {
          if(isset($phone->number) && $phone->type=="home" && $phone->number!=""){
            $dropdown_list .= '<li><b>'.t('Telèfon').':</b></li>';
            $dropdown_list .= '<li>'.((string)$phone->number).'<br></li>';
          }
        }
      }
      if(!isset($case_bean_stored->contact->addresses) || empty($case_bean_stored->contact->addresses)){
        $dropdown_list .= '<li><b>'.t('No hi ha cap adreça').'</b></li>';
      }

      $dropdown_list .= "</ul>";
      $variables['dropdown_list'] = $dropdown_list;
    }
  }

  $admission_bean_stored  = NULL;
  if(isset($_SESSION['admission_bean'])){
    $admission_bean_stored  = $_SESSION['admission_bean'];
  }

  if($admission_bean_stored !=NULL){
    $variables['ident_treatment']  =  '<span class="info"><strong>'.t('Programa').'</strong>';
    if(isset($admission_bean_stored->desc_protocol_actual)){
      $variables['ident_treatment'] .= $admission_bean_stored->desc_protocol_actual;
    }
    $variables['ident_treatment']  .=  '&nbsp;</span><span class="info"><strong>'.t('Inici').'</strong>';
    if(isset($admission_bean_stored->data_protocol_actual)){
      $variables['ident_treatment'] .= $admission_bean_stored->data_protocol_actual;
    }
    $variables['ident_treatment'] .=  '&nbsp;</span><span class="info"><strong>'.t('Estat').'</strong>';
    if(isset($admission_bean_stored->estat_protocol_actual)){
      $variables['ident_treatment'] .= $admission_bean_stored->estat_protocol_actual;
    }
    $variables['ident_treatment'] .=  '&nbsp;</span>';
  }
//   print "hello";
}

function ohp_case_load_common(&$page_array) {
  $case_id = NULL;
  if(isset($_GET['id_case'])){
    $case_id  = $_GET['id_case'];
  }
  $case_bean_stored  = NULL;
  if(isset($_SESSION['case_bean'])){
    $case_bean_stored  = $_SESSION['case_bean'];
  }
  $case_bean = NULL;

  if(isset($case_id) && isset($case_bean_stored) && $case_id == $case_bean_stored->id_case){
    $case_bean=$case_bean_stored;
  }else if(isset($case_id) && (!isset($case_bean_stored) || $case_id != $case_bean_stored->id_case)){
    $result = get_case_identification($case_id);
    if(!empty($result)){
      $case_bean = new stdClass();
      $case_bean->id_case  = $result['user_uid'];
      $case_bean->fullname = get_fullname ($result['given_name'],$result['middle_name'],$result['family_name'],$result['family_name2']);
      $case_bean->given_name   = $result['given_name'];
      $case_bean->middle_name  = $result['middle_name'];
      $case_bean->family_name  = $result['family_name'];
      $case_bean->family_name2 = $result['family_name2'];
      $case_bean->birthday = date('d/m/Y', $result['birthdate']);
      $case_bean->age = get_age( $result['birthdate'] );
      $case_bean->sex = $result['gender'];
      if($case_bean->sex == "M"){
        $case_bean->desc_sex = t('Home');
      }else if($case_bean->sex == "F"){
        $case_bean->desc_sex = t('Dona');
      }else{
        $case_bean->desc_sex = $case_bean->sex;
      }
      $case_bean->cip = $result['cip'];
      $case_bean->nif = $result['nif'];
      $case_bean->nie = $result['nie'];
      $case_bean->pas = $result['pas'];
      $case_bean->nhc = $result['nhc'];
    }

    $contact_bean = new stdClass();
    $case_bean->contact = $contact_bean;
    
    $contact_bean->addresses = array();
    $result = get_case_address($case_id);
  
    foreach ($result as $row) {
      $address_bean = new stdClass();
      $address_bean->street   = $row->street;
      $address_bean->number   = $row->number;
      $address_bean->floor    = $row->floor;
      $address_bean->suite    = $row->suite;
      $address_bean->postcode = $row->postcode;
      $address_bean->city     = $row->city;
      $address_bean->country  = $row->country;
      $contact_bean->addresses[]=$address_bean;
    }
    
    $contact_bean->phones = array();
    $result = get_case_phone($case_id);
  
    foreach ($result as $row) {
      $phone_bean = new stdClass();
      $phone_bean->type   = $row->type;
      $phone_bean->number = $row->number;
      $contact_bean->phones[]=$phone_bean;
    }

    $_SESSION['case_bean'] = $case_bean;
  }

  $admission_id = NULL;
  $admission_bean_stored  = NULL;
  if(isset($_SESSION['admission_bean'])){
    $admission_bean_stored  = $_SESSION['admission_bean'];
  }
  $admission_bean = NULL;

  if(isset($admission_id) && isset($admission_bean_stored) && $admission_id == $admission_bean_stored->id_admission){
    $admission_bean=$admission_bean_stored;
  }else{

    $admission_bean = new stdClass();
    
    $result = get_case_admission($case_id)->fetchAll();
    $admission_first = null;
    $admission_selected=null;
    if(!empty($result)){
      $admission_first = $result[0];
      $admission_selected = $admission_first;
    	if(isset($admission_id)){
      	  foreach ($result as $adm) {
            if($adm['id_admission'] == $admission_id){
              $admission_selected = $adm;
            }
          }
    	}
    }
    if(isset($admission_selected)){
      $admission_bean->id_admission = $admission_selected->id_admission;
      $admission_bean->desc_protocol_actual = t('Oxigenoterapia Crònica Domiciliària');
      if(isset($admission_selected->admission_date)){
        $admission_bean->data_protocol_actual = date('d/m/Y H:i', $admission_selected->admission_date);
      }
      if($admission_selected->status == "DISCHARGED"){
      	$admission_bean->estat_protocol_actual = t('Alta');
      }else if($admission_selected->status == "ACTIVE"){
      	$admission_bean->estat_protocol_actual = t('En tractament');
      }else if($admission_selected->status == "ENROLLED"){
      	$admission_bean->estat_protocol_actual = t('Inscrit');
      }else{
      	$admission_bean->estat_protocol_actual = $admission_selected->status;
      }
    }
    $_SESSION['admission_bean'] = $admission_bean;
  }
}

function replace_ids($input_string, $ids_array){
  if(!isset($input_string)){
    return $input_string;
  }else{
    $input_string = str_replace("ID2", $ids_array[0], $input_string);
    $input_string = str_replace("ID3", $ids_array[1], $input_string);
    $input_string = str_replace("ID4", $ids_array[2], $input_string);
    $input_string = str_replace("ID5", $ids_array[3], $input_string);
    $input_string = str_replace("ID6", $ids_array[4], $input_string);
    $input_string = str_replace("ID7", $ids_array[5], $input_string);
    $input_string = str_replace("/", "_", $input_string);
    return $input_string;
  }
}

/**
 * @} End of "defgroup ohp_case".
 */
